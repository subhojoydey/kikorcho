//include libraries,packages
var express = require('express');
var app = express();
var http = require('http').createServer(app);
var io = require('socket.io')(http);
var Airtable = require('airtable');
const { checkServerIdentity } = require('tls');
var base = new Airtable({ apiKey: 'keyCwEDPmr2YpMKSY' }).base('app6YQdbO9FjIiq2K')
var selector = base('all').select({ view: "all" });
var connectPORT = process.env.PORT || 3000;
var nameEmitter = "";

var checker = false;


//loads the index.html on clients first request to root
app.get('/', (req, res) => {
    res.sendFile(__dirname + '/public/index.html');
});

//serves the public folder
app.use(express.static(__dirname + '/public'));


const tableAdder = (name) => {
    base('usernames').select({ view: "all" }).firstPage(function(err, records) {
        records.forEach(function(record) {
            if (record.fields["Name"] == name) {
                checker = true;
            }
        });
        if (checker == false) {
            base('usernames').create([{
                "fields": {
                    "Name": name
                }
            }]);
        }
    });
};

const tableDeleter = (name) => {
    base('usernames').select({ view: "all" }).firstPage(function(err, records) {
        records.forEach(function(record) {
            if (record.fields["Name"] == name) {
                base('usernames').destroy([record.id], function(err, deletedRecords) {});
            }
        });

    });
};

io.on('connection', function(socket) {
    socket.on('typingUsername', function(typingUsername) {
        if (typingUsername.function != "remove") {
            tableAdder(typingUsername.usernames);
        } else {
            //setTimeout(function() {
            tableDeleter(typingUsername.usernames);
            //}, 2000);
        }

        base('usernames').select({ view: "all" }).firstPage(function(err, records) {
            records.forEach(function(record) {
                console.log("1st loop" + record.fields["Name"]);
                nameEmitter = nameEmitter.concat(record.fields["Name"]);
                //console.log(nameEmitter);
            });
            //console.log(nameEmitter);
        });
        if (nameEmitter != null) {
            console.log("again now");
            console.log("THIS " + nameEmitter);
        }
        //io.emit('typingUsername', typingUsername);
    });

    socket.on('username', function(username) {
        io.emit('username', username);
    });
    socket.on('message', function(msg) {
        io.emit('message', msg);
    });
});

http.listen(connectPORT, () => {
    console.log(`listening on *: ${connectPORT}`);
});